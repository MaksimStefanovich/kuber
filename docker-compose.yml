version: "4.0"

services:
#  product-service:
#    platform: linux/x86_64
#    build: spring-cloud-open-telemetry1/
#    ports:
#      - "8080:8080"
#
#  price-service:
#    platform: linux/x86_64
#    build: spring-cloud-open-telemetry2/
#    ports:
#      - "8081"

#  jaeger-service:
#    image: jaegertracing/all-in-one:latest
#    ports:
#      - "16686:16686"
#      - "14250"
  jaeger:
    image: jaegertracing/all-in-one:1.43.0
    ports:
      - "4318:4318"
      - "4317:4317"
      - "16686:16686" # ui port
    environment:
      - COLLECTOR_OTLP_ENABLED=true

  collector:
    image: otel/opentelemetry-collector-contrib:0.90.0
    command: [ "--config=/etc/otel-collector-config.yml" ]
    volumes:
      - ./config/collector/otel-collector-config.yml:/etc/otel-collector-config.yml
    ports:
      - "4317:4317"
      - "8889:8889"
      - "4318:4318"

  prometheus:
    image: prom/prometheus:v2.34.0
    command: --config.file=/etc/prometheus/prometheus.yml --no-scrape.adjust-timestamps
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:11.1.0
    volumes:
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.2
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch:9200"]
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  postgres :
    image: postgres:17.0
    environment:
      POSTGRES_PASSWORD: example
      POSTGRES_USER: postgres
      POSTGRES_DB: book
    ports:
      - "5433:5432"
